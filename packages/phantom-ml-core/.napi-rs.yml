# NAPI-RS Advanced Configuration
# PhD-level configuration for optimal performance and compatibility

# Build configuration
build:
  # Cross-compilation targets
  targets:
    - platform: win32
      arch: x64
      features: [napi-optimized, enterprise]
    - platform: darwin
      arch: x64
      features: [napi-optimized, enterprise]
    - platform: darwin
      arch: arm64
      features: [napi-optimized, enterprise]
    - platform: linux
      arch: x64
      features: [napi-optimized, enterprise]
    - platform: linux
      arch: arm64
      features: [napi-optimized, enterprise]

  # Build optimization
  optimization:
    lto: true
    strip: true
    panic: abort
    codegen-units: 1

  # Feature flags
  features:
    default: [napi, local]
    enterprise: [napi, all-databases, monitoring, crypto]
    minimal: [napi]
    full: [enterprise, web-full, compression]

# Package configuration
package:
  name: phantom-ml-core
  npm_name: "@phantom-spire/ml-core"

  # Binary naming
  binary_name: phantom-ml-core

  # Distribution
  files:
    - "*.node"
    - "index.js"
    - "index.d.ts"
    - "package.json"
    - "README.md"

# Development configuration
dev:
  # Hot reload for development
  watch: true

  # Debug configuration
  debug:
    backtrace: true
    symbols: true

  # Testing
  test:
    timeout: 30000
    parallel: true

# CI/CD Integration
ci:
  # GitHub Actions integration
  github_actions:
    cache_key: "napi-rs-${{ matrix.target }}-${{ hashFiles('Cargo.lock') }}"
    cache_paths:
      - "~/.cargo/registry"
      - "~/.cargo/git"
      - "target/"

  # Artifact configuration
  artifacts:
    retention_days: 30
    upload_path: "npm/"

# Performance monitoring
performance:
  # Benchmark configuration
  benchmarks:
    enabled: true
    timeout: 300000

  # Memory monitoring
  memory:
    max_heap_size: "2GB"
    gc_strategy: "adaptive"

# Security configuration
security:
  # Code signing
  sign_binaries: true

  # Vulnerability scanning
  audit:
    enabled: true
    level: "high"

# Documentation
docs:
  # TypeScript definitions
  generate_dts: true

  # API documentation
  api_docs:
    format: "markdown"
    output: "docs/api.md"