// API functions for Phantom Malware Core
import type { 
  MalwareStatus, 
  MalwareData, 
  ClassificationData, 
  ReverseEngineeringData, 
  MalwareReportData 
} from './types';

export const fetchMalwareStatus = async (): Promise<MalwareStatus> => {
  const response = await fetch('/api/phantom-cores/malware?operation=status');
  return response.json();
};

export const analyzeMalware = async (malwareData: MalwareData) => {
  const response = await fetch('/api/phantom-cores/malware', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      operation: 'analyze-malware',
      malwareData
    })
  });
  return response.json();
};

export const classifyFamily = async (classificationData: ClassificationData) => {
  const response = await fetch('/api/phantom-cores/malware', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      operation: 'classify-family',
      classificationData
    })
  });
  return response.json();
};

export const reverseEngineer = async (reverseData: ReverseEngineeringData) => {
  const response = await fetch('/api/phantom-cores/malware', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      operation: 'reverse-engineer',
      reverseData
    })
  });
  return response.json();
};

export const generateMalwareReport = async (reportData: MalwareReportData) => {
  const response = await fetch('/api/phantom-cores/malware', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      operation: 'generate-malware-report',
      reportData
    })
  });
  return response.json();
};
