[package]
name = "phantom-core-compliance"
version = "1.0.1"
description = "Compliance and regulatory framework analysis core"
edition = "2021"

[lib]
name = "phantom_compliance_core"
crate-type = ["cdylib"]

[dependencies]
# Core NAPI dependencies - stable 2.16 versions
napi = { version = "2.16", default-features = false, features = ["napi4"], optional = true }
napi-derive = { version = "2.16", default-features = false, optional = true }

# Core serialization and data handling - required for all packages
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }
time = { version = "0.3", features = ["formatting", "parsing", "serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
regex = "1.10"
thiserror = "2.0.16"

# Async runtime - standardized across platform
tokio = { version = "1.0", features = ["full"], optional = true }
async-trait = { version = "0.1", optional = true }
futures = { version = "0.3", optional = true }

# Common utilities for all packages
base64 = { version = "0.22.1", optional = true }
sha2 = { version = "0.10", optional = true }
url = { version = "2.5", optional = true }
anyhow = { version = "1.0", optional = true }

# Database backends - optional, standardized versions
tokio-postgres = { version = "0.7", features = ["with-chrono-0_4", "with-uuid-1", "with-serde_json-1"], optional = true }
sqlx = { version = "0.8.6", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json"], optional = true }
redis = { version = "0.32.5", features = ["tokio-comp", "connection-manager"], optional = true }
mongodb = { version = "3.3.0", optional = true }
elasticsearch = { version = "8.15.0-alpha.1", optional = true }
deadpool-postgres = { version = "0.14.1", optional = true }

# Web framework support - optional
actix-web = { version = "4.4", optional = true }
reqwest = { version = "0.12.23", features = ["json", "rustls-tls"], default-features = false, optional = true }

# Monitoring and observability - optional
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }
prometheus = { version = "0.14.0", optional = true }
metrics = { version = "0.24.2", optional = true }

# Security and cryptography - optional
ring = { version = "0.17", optional = true }
rustls = { version = "0.23.31", optional = true }
jsonwebtoken = { version = "9.2", optional = true }

# Enterprise standards dependency
phantom-enterprise-standards = { path = "../phantom-core-enterprise", optional = true }

# ORM support - optional
diesel = { version = "2.2", features = ["postgres", "chrono", "uuid", "serde_json", "r2d2"], optional = true }
diesel_migrations = { version = "2.2", optional = true }

# Compression support - optional
flate2 = { version = "1.0", optional = true }

[features]
default = ["local"]

# Core features
napi = ["dep:napi", "dep:napi-derive"]
local = []

# Database backends
postgres = ["dep:tokio-postgres", "dep:deadpool-postgres", "dep:sqlx", "dep:diesel"]
redis-store = ["dep:redis"]
mongodb-store = ["dep:mongodb"]
elasticsearch-store = ["dep:elasticsearch"]
all-databases = ["postgres", "redis-store", "mongodb-store", "elasticsearch-store"]

# Web and messaging
web-full = ["dep:actix-web", "dep:reqwest"]
messaging = ["redis-store"]  # Using Redis for pub/sub messaging
caching = ["redis-store"]    # Redis-based caching layer

# Enterprise monitoring and security
monitoring = ["dep:tracing", "dep:tracing-subscriber", "dep:prometheus", "dep:metrics"]
crypto = ["dep:ring", "dep:rustls", "dep:jsonwebtoken", "dep:sha2", "dep:base64"]
compression = ["dep:flate2"]
diesel-orm = ["dep:diesel", "dep:diesel_migrations"]
advanced-config = []

# Bundled feature sets
enterprise = ["all-databases", "messaging", "caching", "monitoring", "crypto", "phantom-enterprise-standards"]
full = ["enterprise", "web-full", "diesel-orm", "compression", "advanced-config"]

[build-dependencies]
napi-build = "2.0.1"
