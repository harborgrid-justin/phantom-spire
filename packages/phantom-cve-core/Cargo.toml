[package]
name = "phantom-cve-core"
version = "1.0.1"
description = "CVE processing core with vulnerability intelligence"
edition = "2021"

[lib]
name = "phantom_cve_core"
crate-type = ["cdylib"]

[dependencies]
napi = { version = "3.3.0", default-features = false, features = ["napi6", "serde-json", "tokio_rt"], optional = true }
napi-derive = { version = "3.2.5", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
regex = "1.10"
thiserror = "2.0.16"
semver = "1.0"
toml = "0.9.5"
async-trait = "0.1"
tokio = { version = "1.0", features = ["full"] }
num_cpus = "1.16"
futures-util = "0.3"
log = "0.4"
futures = "0.3"
bincode = "1.3"
# Web frameworks
actix-web = { version = "4.4", optional = true }
rocket = { version = "0.5", features = ["json"], optional = true }
# HTTP client
reqwest = { version = "0.12.23", features = ["json", "rustls-tls"], default-features = false }
# ORM
diesel = { version = "2.1", features = ["postgres", "mysql", "sqlite", "r2d2", "chrono", "uuid"], optional = true }
diesel_migrations = { version = "2.1", optional = true }
# Database dependencies
tokio-postgres = { version = "0.7", features = ["with-serde_json-1", "with-chrono-0_4"], optional = true }
elasticsearch = { version = "8.19.0-alpha.1", optional = true }
mongodb = { version = "3.3.0", optional = true }
deadpool-postgres = { version = "0.14.1", optional = true }
redis = { version = "0.32.5", features = ["aio", "tokio-comp", "connection-manager"] }
# Message queues and streaming
rdkafka = { version = "0.38.0", features = ["cmake-build"], optional = true }
lapin = { version = "3.4.0", optional = true }
# Caching and key-value stores
memcached-rs = { version = "0.4", optional = true }
# Monitoring and observability
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }
prometheus = { version = "0.14.0", optional = true }
metrics = { version = "0.24.2", optional = true }
# Security and cryptography
ring = { version = "0.17", optional = true }
rustls = { version = "0.23.31", optional = true }
jsonwebtoken = { version = "9.2", optional = true }
# Email notifications
lettre = { version = "0.11", features = ["tokio1-rustls-tls"], optional = true }
# Configuration management
config = { version = "0.15.15", features = ["yaml", "json"], optional = true }
# Rate limiting
governor = { version = "0.10.1", optional = true }
# Job queues
sidekiq = { version = "0.13.0", optional = true }

[features]
default = ["local"]

# Core features
napi = ["dep:napi", "dep:napi-derive"]
local = []

# Database backends
postgres = ["tokio-postgres", "deadpool-postgres", "sqlx", "diesel"]
redis-store = ["redis"]
mongodb-store = ["mongodb"]
elasticsearch-store = ["elasticsearch"]
all-databases = ["postgres", "redis-store", "mongodb-store", "elasticsearch-store"]

# Web and messaging
web-full = ["actix-web", "reqwest"]
messaging = ["redis-store"]  # Using Redis for pub/sub messaging
caching = ["redis-store"]    # Redis-based caching layer

# Enterprise monitoring and security
monitoring = ["tracing", "tracing-subscriber", "prometheus", "metrics"]
crypto = ["ring", "rustls", "jsonwebtoken", "sha2", "base64"]
compression = ["flate2"]
diesel-orm = ["diesel", "diesel_migrations"]
advanced-config = []

# Bundled feature sets
enterprise = ["all-databases", "messaging", "caching", "monitoring", "crypto"]
full = ["enterprise", "web-full", "diesel-orm", "compression", "advanced-config"]
[build-dependencies]
napi-build = "2.1.0"
