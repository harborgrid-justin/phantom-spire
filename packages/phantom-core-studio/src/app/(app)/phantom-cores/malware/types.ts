// TypeScript interfaces for Phantom Malware Core

export interface MalwareStatus {
  success: boolean;
  data?: {
    status: string;
    components: Record<string, any>;
    metrics: {
      uptime: string;
      samples_analyzed: number;
      detection_rate: number;
      family_classifications: number;
      sandbox_utilization: number;
    };
  };
}

export interface MalwareAnalysis {
  analysis_id: string;
  malware_profile: {
    sample_hash: string;
    malware_family: string;
    threat_level: string;
    analysis_confidence: number;
  };
  behavioral_analysis: any;
  static_analysis: any;
  recommendations: string[];
}

export interface MalwareData {
  sample_hash: string;
  analysis_type: string;
  sandbox_environment: string;
  analysis_timeout: number;
  include_network_analysis: boolean;
  include_memory_analysis: boolean;
}

export interface ClassificationData {
  classification_algorithms: string[];
  confidence_threshold: number;
  include_variant_analysis: boolean;
  update_signatures: boolean;
}

export interface ReverseEngineeringData {
  analysis_tools: string[];
  analysis_depth: string;
  extract_iocs: boolean;
  generate_yara_rules: boolean;
}

export interface MalwareReportData {
  report_type: string;
  include_static_analysis: boolean;
  include_dynamic_analysis: boolean;
  include_iocs: boolean;
  include_mitigation_strategies: boolean;
}

export interface MalwareOperation {
  id: string;
  title: string;
  description: string;
  icon: React.ReactNode;
  action: () => Promise<any>;
}
