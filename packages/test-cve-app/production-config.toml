# phantom-cve-core Production Configuration
# Enterprise-grade database and feature configuration

[database.postgres]
# Primary PostgreSQL database for CVE data persistence
url = "postgresql://cve_user:secure_password@postgres.enterprise.com:5432/cve_production"
pool_size = 50
timeout_seconds = 30
ssl_mode = "require"
schema = "cve_data"

[database.redis]
# Redis for high-performance caching and session management
url = "redis://redis-cluster.enterprise.com:6379"
pool_size = 100
ttl_seconds = 3600
cluster_mode = true
sentinel_nodes = ["redis-sentinel-1:26379", "redis-sentinel-2:26379", "redis-sentinel-3:26379"]

[database.mongodb]
# MongoDB for flexible document storage and analytics
url = "mongodb://mongo-cluster.enterprise.com:27017/cve_documents"
database = "cve_analytics"
collections = { cves = "vulnerability_data", exploits = "exploit_intelligence", actors = "threat_actors" }
replica_set = "rs0"
auth_database = "admin"

[database.elasticsearch]
# Elasticsearch for full-text search and advanced analytics
url = "https://elastic-cluster.enterprise.com:9200"
index_prefix = "cve_production"
shards = 5
replicas = 2
refresh_interval = "1s"
auth = { username = "cve_service", password = "elastic_password" }

[enterprise.security]
# Enterprise security configuration
tenant_isolation = true
encryption_at_rest = true
encryption_algorithm = "AES-256-GCM"
audit_logging = true
audit_retention_days = 2557  # 7 years for compliance
access_control = "rbac"
mfa_required = true

[enterprise.compliance]
# Compliance framework settings
frameworks = ["SOC2", "ISO27001", "NIST", "GDPR", "HIPAA"]
data_classification = "confidential"
retention_policy = "7_years"
backup_encryption = true
geographic_restrictions = ["EU", "US"]

[performance.scaling]
# Performance and scaling configuration
horizontal_scaling = true
database_sharding = true
connection_pooling = true
load_balancing = "round_robin"
caching_strategy = "write_through"
batch_size = 10000
parallel_processing = true

[monitoring.observability]
# Monitoring and observability
metrics_enabled = true
tracing_enabled = true
health_checks = true
alerting = { critical = "email", warning = "slack" }
dashboards = ["grafana", "datadog", "splunk"]

[integration.apis]
# API and integration settings
rest_api = true
graphql_api = true
webhook_support = true
rate_limiting = { requests_per_minute = 10000, burst = 50000 }
api_versioning = "semantic"
documentation = "openapi_3.0"

[features.analytics]
# Advanced analytics features
real_time_processing = true
machine_learning = true
threat_intelligence = true
risk_scoring = "cvss_v4"
vulnerability_trends = true
predictive_analytics = true