/**
 * Vulnerability Management Routes
 * Comprehensive routes for all vulnerability management modules
 */

import { Router } from 'express';
import { AssetManagementController } from '../controllers/vulnerabilityManagement/assetManagementController.js';
import { ThreatIntelligenceController } from '../controllers/vulnerabilityManagement/threatIntelligenceController.js';
import { ComplianceManagementController } from '../controllers/vulnerabilityManagement/complianceManagementController.js';
import { RemediationManagementController } from '../controllers/vulnerabilityManagement/remediationManagementController.js';
import { AnalyticsMetricsController } from '../controllers/vulnerabilityManagement/analyticsMetricsController.js';
import { authMiddleware } from '../middleware/auth.js';

const router = Router();

// All routes require authentication
router.use(authMiddleware);

/**
 * Asset Management Routes (8 endpoints)
 */

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/inventory:
 *   get:
 *     summary: Get asset inventory with vulnerability status
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset inventory retrieved successfully
 */
router.get('/assets/inventory', AssetManagementController.getAssetInventory);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/assessment/{assetId}:
 *   get:
 *     summary: Get detailed vulnerability assessment for specific asset
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: assetId
 *         required: true
 *         schema:
 *           type: string
 *         description: Asset ID
 *     responses:
 *       200:
 *         description: Asset vulnerability assessment retrieved successfully
 */
router.get(
  '/assets/assessment/:assetId',
  AssetManagementController.getAssetVulnerabilityAssessment
);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/groups:
 *   get:
 *     summary: Get asset groups and their vulnerability status
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset groups retrieved successfully
 */
router.get('/assets/groups', AssetManagementController.getAssetGroups);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/risk-profiles:
 *   get:
 *     summary: Get risk profiles for all assets
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset risk profiles retrieved successfully
 */
router.get(
  '/assets/risk-profiles',
  AssetManagementController.getAssetRiskProfiles
);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/compliance-status:
 *   get:
 *     summary: Get compliance status for all assets
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset compliance status retrieved successfully
 */
router.get(
  '/assets/compliance-status',
  AssetManagementController.getAssetComplianceStatus
);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/patch-status:
 *   get:
 *     summary: Get patch status for all assets
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset patch status retrieved successfully
 */
router.get(
  '/assets/patch-status',
  AssetManagementController.getAssetPatchStatus
);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/security-baselines:
 *   get:
 *     summary: Get security baselines and compliance status
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset security baselines retrieved successfully
 */
router.get(
  '/assets/security-baselines',
  AssetManagementController.getAssetSecurityBaselines
);

/**
 * @swagger
 * /api/v1/vulnerability-management/assets/lifecycle:
 *   get:
 *     summary: Get asset lifecycle management information
 *     tags: [Vulnerability Management - Asset Management]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Asset lifecycle information retrieved successfully
 */
router.get('/assets/lifecycle', AssetManagementController.getAssetLifecycle);

/**
 * Threat Intelligence Routes (6 endpoints)
 */

/**
 * @swagger
 * /api/v1/vulnerability-management/threat-intelligence/feeds:
 *   get:
 *     summary: Get threat intelligence feeds status and data
 *     tags: [Vulnerability Management - Threat Intelligence]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Threat feeds retrieved successfully
 */
router.get(
  '/threat-intelligence/feeds',
  ThreatIntelligenceController.getThreatFeeds
);

/**
 * @swagger
 * /api/v1/vulnerability-management/threat-intelligence/iocs:
 *   get:
 *     summary: Get indicators of compromise related to vulnerabilities
 *     tags: [Vulnerability Management - Threat Intelligence]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: IOCs retrieved successfully
 */
router.get('/threat-intelligence/iocs', ThreatIntelligenceController.getIOCs);

/**
 * @swagger
 * /api/v1/vulnerability-management/threat-intelligence/actors:
 *   get:
 *     summary: Get threat actor profiles and their vulnerability exploitation patterns
 *     tags: [Vulnerability Management - Threat Intelligence]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Threat actor profiles retrieved successfully
 */
router.get(
  '/threat-intelligence/actors',
  ThreatIntelligenceController.getThreatActorProfiles
);

/**
 * @swagger
 * /api/v1/vulnerability-management/threat-intelligence/campaigns:
 *   get:
 *     summary: Get threat campaign tracking and vulnerability exploitation
 *     tags: [Vulnerability Management - Threat Intelligence]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Campaign tracking retrieved successfully
 */
router.get(
  '/threat-intelligence/campaigns',
  ThreatIntelligenceController.getCampaignTracking
);

/**
 * @swagger
 * /api/v1/vulnerability-management/threat-intelligence/hunting:
 *   get:
 *     summary: Get threat hunting activities and results
 *     tags: [Vulnerability Management - Threat Intelligence]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Threat hunting data retrieved successfully
 */
router.get(
  '/threat-intelligence/hunting',
  ThreatIntelligenceController.getThreatHunting
);

/**
 * @swagger
 * /api/v1/vulnerability-management/threat-intelligence/early-warning:
 *   get:
 *     summary: Get early warning system alerts and notifications
 *     tags: [Vulnerability Management - Threat Intelligence]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Early warning system data retrieved successfully
 */
router.get(
  '/threat-intelligence/early-warning',
  ThreatIntelligenceController.getEarlyWarningSystem
);

/**
 * Compliance Management Routes (6 endpoints)
 */

/**
 * @swagger
 * /api/v1/vulnerability-management/compliance/dashboard:
 *   get:
 *     summary: Get compliance dashboard with framework status
 *     tags: [Vulnerability Management - Compliance]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Compliance dashboard retrieved successfully
 */
router.get(
  '/compliance/dashboard',
  ComplianceManagementController.getComplianceDashboard
);

/**
 * @swagger
 * /api/v1/vulnerability-management/compliance/framework-mapping:
 *   get:
 *     summary: Get framework mapping and cross-references
 *     tags: [Vulnerability Management - Compliance]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Framework mapping retrieved successfully
 */
router.get(
  '/compliance/framework-mapping',
  ComplianceManagementController.getFrameworkMapping
);

/**
 * @swagger
 * /api/v1/vulnerability-management/compliance/control-assessments:
 *   get:
 *     summary: Get control assessments and compliance status
 *     tags: [Vulnerability Management - Compliance]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Control assessments retrieved successfully
 */
router.get(
  '/compliance/control-assessments',
  ComplianceManagementController.getControlAssessments
);

/**
 * @swagger
 * /api/v1/vulnerability-management/compliance/audit-trails:
 *   get:
 *     summary: Get audit trails and compliance activities
 *     tags: [Vulnerability Management - Compliance]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Audit trails retrieved successfully
 */
router.get(
  '/compliance/audit-trails',
  ComplianceManagementController.getAuditTrails
);

/**
 * @swagger
 * /api/v1/vulnerability-management/compliance/regulatory-reports:
 *   get:
 *     summary: Get regulatory reports and compliance documentation
 *     tags: [Vulnerability Management - Compliance]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Regulatory reports retrieved successfully
 */
router.get(
  '/compliance/regulatory-reports',
  ComplianceManagementController.getRegulatoryReports
);

/**
 * @swagger
 * /api/v1/vulnerability-management/compliance/policy-management:
 *   get:
 *     summary: Get policy management and governance information
 *     tags: [Vulnerability Management - Compliance]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Policy management data retrieved successfully
 */
router.get(
  '/compliance/policy-management',
  ComplianceManagementController.getPolicyManagement
);

/**
 * Remediation Management Routes (6 endpoints)
 */

/**
 * @swagger
 * /api/v1/vulnerability-management/remediation/patch-planning:
 *   get:
 *     summary: Get patch planning and scheduling information
 *     tags: [Vulnerability Management - Remediation]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Patch planning data retrieved successfully
 */
router.get(
  '/remediation/patch-planning',
  RemediationManagementController.getPatchPlanning
);

/**
 * @swagger
 * /api/v1/vulnerability-management/remediation/patch-testing:
 *   get:
 *     summary: Get patch testing results and environments
 *     tags: [Vulnerability Management - Remediation]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Patch testing data retrieved successfully
 */
router.get(
  '/remediation/patch-testing',
  RemediationManagementController.getPatchTesting
);

/**
 * @swagger
 * /api/v1/vulnerability-management/remediation/patch-deployment:
 *   get:
 *     summary: Get patch deployment status and progress
 *     tags: [Vulnerability Management - Remediation]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Patch deployment status retrieved successfully
 */
router.get(
  '/remediation/patch-deployment',
  RemediationManagementController.getPatchDeployment
);

/**
 * @swagger
 * /api/v1/vulnerability-management/remediation/rollback-management:
 *   get:
 *     summary: Get rollback plans and history
 *     tags: [Vulnerability Management - Remediation]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Rollback management data retrieved successfully
 */
router.get(
  '/remediation/rollback-management',
  RemediationManagementController.getRollbackManagement
);

/**
 * @swagger
 * /api/v1/vulnerability-management/remediation/emergency-response:
 *   get:
 *     summary: Get emergency response procedures and status
 *     tags: [Vulnerability Management - Remediation]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Emergency response data retrieved successfully
 */
router.get(
  '/remediation/emergency-response',
  RemediationManagementController.getEmergencyResponse
);

/**
 * @swagger
 * /api/v1/vulnerability-management/remediation/maintenance-windows:
 *   get:
 *     summary: Get maintenance windows and scheduling
 *     tags: [Vulnerability Management - Remediation]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Maintenance windows retrieved successfully
 */
router.get(
  '/remediation/maintenance-windows',
  RemediationManagementController.getMaintenanceWindows
);

/**
 * Analytics and Metrics Routes (6 endpoints)
 */

/**
 * @swagger
 * /api/v1/vulnerability-management/analytics/security-metrics:
 *   get:
 *     summary: Get comprehensive security metrics
 *     tags: [Vulnerability Management - Analytics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Security metrics retrieved successfully
 */
router.get(
  '/analytics/security-metrics',
  AnalyticsMetricsController.getSecurityMetrics
);

/**
 * @swagger
 * /api/v1/vulnerability-management/analytics/trend-analysis:
 *   get:
 *     summary: Get trend analysis and historical data
 *     tags: [Vulnerability Management - Analytics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Trend analysis retrieved successfully
 */
router.get(
  '/analytics/trend-analysis',
  AnalyticsMetricsController.getTrendAnalysis
);

/**
 * @swagger
 * /api/v1/vulnerability-management/analytics/performance-kpis:
 *   get:
 *     summary: Get performance KPIs and benchmarks
 *     tags: [Vulnerability Management - Analytics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Performance KPIs retrieved successfully
 */
router.get(
  '/analytics/performance-kpis',
  AnalyticsMetricsController.getPerformanceKPIs
);

/**
 * @swagger
 * /api/v1/vulnerability-management/analytics/executive-dashboard:
 *   get:
 *     summary: Get executive dashboard with high-level metrics
 *     tags: [Vulnerability Management - Analytics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Executive dashboard retrieved successfully
 */
router.get(
  '/analytics/executive-dashboard',
  AnalyticsMetricsController.getExecutiveDashboard
);

/**
 * @swagger
 * /api/v1/vulnerability-management/analytics/risk-heatmaps:
 *   get:
 *     summary: Get risk heatmaps and visualizations
 *     tags: [Vulnerability Management - Analytics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Risk heatmaps retrieved successfully
 */
router.get(
  '/analytics/risk-heatmaps',
  AnalyticsMetricsController.getRiskHeatmaps
);

/**
 * @swagger
 * /api/v1/vulnerability-management/analytics/predictive-analytics:
 *   get:
 *     summary: Get predictive analytics and forecasting
 *     tags: [Vulnerability Management - Analytics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Predictive analytics retrieved successfully
 */
router.get(
  '/analytics/predictive-analytics',
  AnalyticsMetricsController.getPredictiveAnalytics
);

export default router;
